#ifndef STACK_H
#define STACK_H

class StackOfIntegers	  //類別名稱 
{
public:						//::可以被存取 
  StackOfIntegers();    //建立一個 StackOfIntegers建構子 
  bool isEmpty() const; //()測試是否為空的函式 
  int peek() const;	    //取出最上面的函數 
  void push(int value); //把資料丟入的函數 
  int pop();            //死出最上層資料的函數 
  int getSize() const;  //取出堆蝶大小的函數 

private:	              //私有的1.把資料影藏起來  2.使用上述的公數存取 
  int elements[100];    //整數類型的元素  大小為一百 
  int size;             //整數類型的大小 
};

#endif

------------------------------------------------------------------------------------------------
StackOfIntegers.cpp

#include "StackOfIntegers.h"

StackOfIntegers::StackOfIntegers()     //類別的建構子實作 
{
  size = 0;                            //Integers物件 
}

bool StackOfIntegers::isEmpty() const	//測試是否為空的實作 
{
  return (size == 0);                 //若大小為零則回傳假;若大小不為零則回傳真 
}

int StackOfIntegers::peek() const	   //取出最上層的資料實作 
{
  return elements[size - 1];          //回傳elements類別size - 1的值
}

void StackOfIntegers::push(int valu)	//類別StackOfIntegers丟入一個整數value(不回傳值的參數)
{
  elements[size++] = value;         //(看圖45圖註解)
}

int StackOfIntegers::pop()         //取整數StackOfIntegers最上層資料的實作
{
  return elements[--size];         //看圖50圖註解(看圖50圖註解)

int StackOfIntegers::getSize() const//取得StackOfIntegers資料大小
{
  return size; 
}


------------------------------------------------------------------------------------------------

TestStackOfIntegers.cpp

#include <iostream>                 載入標頭檔iostream
#include "StackOfIntegers.h"        載入StackOfIntegers.h
using namespace std;                使用namespace std這個命名空間

int main()
{
  StackOfIntegers stack;            

  for (int i = 0; i < 10; i++)
    stack.push(i);

  while (!stack.isEmpty())
    cout << stack.pop() << " ";

  return 0;
}
