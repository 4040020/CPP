#ifndef STACK_H
#define STACK_H

class StackOfIntegers		//類別名稱 
{
public:						//::可以被存取 
  StackOfIntegers();		//建立一個 StackOfIntegers建構子 
  bool isEmpty() const;		//()測試是否為空的函式 
  int peek() const;			//取出最上面的函數 
  void push(int value);		//把資料丟入的函數 
  int pop();				//死出最上層資料的函數 
  int getSize() const;		//取出堆蝶大小的函數 

private:					//私有的1.把資料影藏起來  2.使用上述的公數存取 
  int elements[100];		//整數類型的元素  大小為一百 
  int size;					//整數類型的大小 
};

#endif




StackOfIntegers.cpp

#include "StackOfIntegers.h"

StackOfIntegers::StackOfIntegers()		//類別的建構子實作 
{
  size = 0;								//Integers物件 
}

bool StackOfIntegers::isEmpty() const	//測試是否為空的實作 
{
  return (size == 0);					//若大小為零則回傳假;若大小不為零則回傳真 
}

int StackOfIntegers::peek() const		//取出最上層的資料實作 
{
  return elements[size - 1];			//
}

void StackOfIntegers::push(int value)	//
{
  elements[size++] = value;				//
}

int StackOfIntegers::pop()				//
{
  return elements[--size];
}

int StackOfIntegers::getSize() const
{
  return size; 
}
